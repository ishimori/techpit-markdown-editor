{"version":3,"sources":["pages/editor.tsx","index.tsx"],"names":["useState","React","StorageKey","Header","styled","header","Wrapper","div","TextArea","textarea","Preview","Editor","localStorage","getItem","text","setText","onChange","event","ChangedText","target","value","setItem","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEQA,EAAaC,WACfC,EAAa,oBAEbC,EAASC,IAAOC,OAAV,0KAWNC,EAAUF,IAAOG,IAAV,qGAQPC,EAAWJ,IAAOK,SAAV,oNAYRC,EAAUN,IAAOG,IAAV,mLAWAI,EAAmB,WAAO,IAAD,EACZX,EACtBY,aAAaC,QAAQX,IAAe,IAFF,mBAC7BY,EAD6B,KACvBC,EADuB,KAIpC,OACE,qCACE,cAACZ,EAAD,8BACA,eAACG,EAAD,WACE,cAACE,EAAD,CACEQ,SAAU,SAACC,GACT,IAAMC,EAAcD,EAAME,OAAOC,MACjCR,aAAaS,QAAQnB,EAAYgB,GACjCH,EAAQG,IAEVE,MAAON,IAET,cAACJ,EAAD,sEC1DFY,EAAcC,YAAH,6EAMjBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.346a81aa.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst { useState } = React;\r\nconst StorageKey = \"pages/editor:test\";\r\n\r\nconst Header = styled.header`\r\n  font-size: 1.5rem;\r\n  height: 2rem;\r\n  left: 0;\r\n  line-height: 2rem;\r\n  padding: 0.5rem 1rem;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  bottom: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 3rem;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  border-right: 1px solid silver;\r\n  border-top: 1px solid silver;\r\n  bottom: 0;\r\n  font-size: 1rem;\r\n  left: 0;\r\n  padding: 0.5rem;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 50vw;\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  border-top: 1px solid silver;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n  padding: 1rem;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  width: 50vw;\r\n`;\r\n\r\nexport const Editor: React.FC = () => {\r\n  const [text, setText] = useState<string>(\r\n    localStorage.getItem(StorageKey) || \"\"\r\n  );\r\n  return (\r\n    <>\r\n      <Header>Markdown Editor</Header>\r\n      <Wrapper>\r\n        <TextArea\r\n          onChange={(event) => {\r\n            const ChangedText = event.target.value;\r\n            localStorage.setItem(StorageKey, ChangedText);\r\n            setText(ChangedText);\r\n          }}\r\n          value={text}\r\n        />\r\n        <Preview>プレビューエリア</Preview>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { Editor } from \"./pages/editor\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body * {\r\n    box-sizing : border-box;\r\n  }\r\n  `;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <Editor />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}